  48  fix_extract_dataframe.py 
@@ -21,18 +21,17 @@ def read_json(json_file: str)->list:

    return len(tweets_data), tweets_data

class Tweet_df:
class TweetDfExtractor:
    """
    this class will parse tweets json into a pandas dataframe
    this function will parse tweets json into a pandas dataframe
    
    Return
    ------
    dataframe
    """
    def __init__(self, tweets_list, columns):
    def __init__(self, tweets_list):

        self.tweets_list = tweets_list
        self.columns = columns

    # an example function
    def find_statuses_count(self)->list:
@@ -44,7 +43,7 @@ def find_full_text(self)->list:

    def find_sentiments(self, text)->list:

        return polarity, subjectivity
        return polarity, self.subjectivity

    def find_created_time(self)->list:

@@ -84,14 +83,6 @@ def find_hashtags(self)->list:
    def find_mentions(self)->list:
        mentions = 

    def find_place(self)->list:
        try:
            xyz = self.tweets_list['place']['bounding_box']['coordinates']
            coordinates = [coord for loc in xyz for coord in loc]
        except TypeError:
            coordinates = None

        return coordinates

    def find_location(self)->list:
        try:
@@ -104,16 +95,43 @@ def find_location(self)->list:




    def get_tweet_df(self, save=False)->pd.DataFrame:
        """required column to be generated you should be creative and add more features"""

        columns = ['created_at', 'source', 'original_text','polarity','subjectivity', 'lang', 'favorite_count', 'retweet_count', 
            'original_author', 'followers_count','friends_count','possibly_sensitive', 'hashtags', 'user_mentions', 'place']

        created_at = self.find_created_time()
        source = self.find_source()
        text = self.find_full_text()
        polarity, subjectivity = self.find_sentiments(text)
        lang = self.find_lang()
        fav_count = self.find_favourite_count()
        retweet_count = self.find_retweet_count()
        screen_name = self.find_screen_name()
        follower_count = self.find_followers_count()
        friends_count = self.find_friends_count()
        sensitivity = self.is_sensitive()
        hashtags = self.find_hashtags()
        mentions = self.find_mentions()
        location = self.find_location()
        data = zip(created_at, source, text, polarity, subjectivity, lang, fav_count, retweet_count, screen_name, follower_count, friends_count, sensitivity, hashtags, mentions, location)
        df = pd.DataFrame(data=data, columns=columns)

        if save:
            df.to_csv('processed_tweet_data.csv', index=False)
            print('File Successfully Saved.!!!')

        return df


if __name__ == "__main__":
    # required column to be generated you should be creative and add more features
    columns = ['created_at', 'source', 'original_text','clean_text', 'sentiment','polarity','subjectivity', 'lang', 'favorite_count', 'retweet_count', 
    'original_author', 'screen_count', 'followers_count','friends_count','possibly_sensitive', 'hashtags', 'user_mentions', 'place', 'place_coord_boundaries']
    _, tweet_list = read_json("../covid19.json")
    tweet = Tweet_df(tweet_list, columns=columns)
    tweet = TweetDfExtractor(tweet_list)
    tweet_df = tweet.get_tweet_df() 

    # use all defined functions to generate a dataframe with the specified columns above
